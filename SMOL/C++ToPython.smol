############################### 
#!title: C++toPython 
############################### 

#Remove libraries 
replace /\#include.+$/gm 
replace /using namespace.+$/gm 

#Format comments 
replace /\/\/(.+)$/gm "\#$1;" 

#Remove code formatting, make all whitespaces as small as possible 
replace /\n/g "" 
replace /(\s)+/g "$1" 
replace /\s(\W)/g "$1" 
replace /(\W)\s/g "$1" 

#Make all increments into += 1; 
replace /((a-zA-Z]+)\s?\+\+/ "$1+=1" 
replace /\+\+\s?([a-zA-Z]+)/ "$1+=1" 

replace /for\(int\s(\S+?)=(.+?);\1<(.+?);\1+=1\)/ "for $1 in range($2,$3)"

#Input Output 
replace /cout<<(.+?);/g "print($1);" 
replace /cin>>(.+?);/g "input($1);" 
replace /(<<)|(>>)/ ","

#Recursively tabulate all nested blocks 
while /^(\t*)(.+?)\{/m replace /^(\t*)(.+?)\{/gm "$1$2:\n\t$1" 
while /^(\t*)\t(.+?)\}/m replace /^(\t*)\t(.+?)\}/gm "$1\t$2\n$1" 

#Expand code back onto multiple lines 
while /^(\t*)(.+?(?:;))+$/m replace /^(\t*)(.+?);(.+)$/m "$1$2\n$1$3"

#Start functions with def 
replace /^.+?([a-z]+)\((.*)\):$/gm "def $1($2):" 